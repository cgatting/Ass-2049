import sys
import sqlite3
import qrcode
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QLabel, QPushButton, QScrollArea, \
    QDialog, QLineEdit, QVBoxLayout as QVBox, QHBoxLayout, QFrame
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt

class PromotionsApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.initUI()

    def initUI(self):
        self.setWindowTitle("Promotions App")
        self.setGeometry(100, 100, 600, 800)

        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        central_widget_layout = QVBoxLayout()
        central_widget.setLayout(central_widget_layout)

        # Create a white header
        header_frame = QFrame()
        header_frame.setFrameShape(QFrame.StyledPanel)
        header_frame.setStyleSheet("background-color: white;")
        header_frame.setFixedHeight(50)  # Set the header height
        header_layout = QVBoxLayout()
        header_frame.setLayout(header_layout)

        # Add header content here if needed
        header_label = QLabel("Promotions Header")
        header_label.setAlignment(Qt.AlignCenter)
        header_layout.addWidget(header_label)

        # Create a scroll area with an island green background
        scroll_area = QScrollArea(self)
        scroll_area.setStyleSheet("background-color: #7CFC00;")  # Island green color
        scroll_area.setWidgetResizable(True)
        central_widget_layout.addWidget(scroll_area)

        container_widget = QWidget()
        scroll_area.setWidget(container_widget)
        container_layout = QVBoxLayout()
        container_widget.setLayout(container_layout)

        self.promotions = self.fetch_promotions_from_database()

        for promotion in self.promotions:
            promotion_widget = self.create_promotion_widget(promotion)
            container_layout.addWidget(promotion_widget)

        add_promotion_button = QPushButton("Add New Promotion")
        add_promotion_button.clicked.connect(self.show_add_promotion_dialog)
        central_widget_layout.addWidget(add_promotion_button)

        self.show()

    def fetch_promotions_from_database(self):
        conn = sqlite3.connect("promotions.db")
        cursor = conn.cursor()
        cursor.execute("SELECT qr_code, text, voucher_code FROM promotions")
        promotions = cursor.fetchall()
        conn.close()
        return promotions

    def create_promotion_widget(self, promotion):
        promotion_widget = QFrame()
        promotion_widget.setFrameShape(QFrame.StyledPanel)
        promotion_widget.setStyleSheet("background-color: white;")
        promotion_layout = QVBoxLayout()
        promotion_widget.setLayout(promotion_layout)

        qr = qrcode.QRCode(
            version=1,
            error_correction=qrcode.constants.ERROR_CORRECT_L,
            box_size=10,
            border=4,
        )
        qr.add_data(promotion[2])  # Use the voucher code
        qr.make(fit=True)
        qr_image = qr.make_image(fill_color="black", back_color="white")

        qr_pixmap = QPixmap.fromImage(qr_image)
        qr_code_label = QLabel()
        qr_code_label.setPixmap(qr_pixmap)

        text_label = QLabel(f"Text: {promotion[1]}")
        voucher_label = QLabel(f"Voucher Code: {promotion[2]}")
        details_button = QPushButton("Details")

        promotion_layout.addWidget(qr_code_label)
        promotion_layout.addWidget(text_label)
        promotion_layout.addWidget(voucher_label)
        promotion_layout.addWidget(details_button)

        return promotion_widget

    def show_add_promotion_dialog(self):
        dialog = QDialog(self)
        dialog.setWindowTitle("Add New Promotion")
        dialog.setGeometry(200, 200, 400, 200)

        layout = QVBox()

        qr_code_label = QLabel("QR Code:")
        qr_code_input = QLineEdit()

        text_label = QLabel("Text:")
        text_input = QLineEdit()

        voucher_label = QLabel("Voucher Code:")
        voucher_input = QLineEdit()

        add_button = QPushButton("Add Promotion")
        add_button.clicked.connect(lambda: self.add_promotion_to_database(qr_code_input.text(), text_input.text(), voucher_input.text(), dialog))

        layout.addWidget(qr_code_label)
        layout.addWidget(qr_code_input)
        layout.addWidget(text_label)
        layout.addWidget(text_input)
        layout.addWidget(voucher_label)
        layout.addWidget(voucher_input)
        layout.addWidget(add_button)

        dialog.setLayout(layout)
        dialog.exec_()

    def add_promotion_to_database(self, qr_code, text, voucher_code, dialog):
        conn = sqlite3.connect("promotions.db")
        cursor = conn.cursor()
        cursor.execute("INSERT INTO promotions (qr_code, text, voucher_code) VALUES (?, ?, ?)", (qr_code, text, voucher_code))
        conn.commit()
        conn.close()

        self.promotions = self.fetch_promotions_from_database()
        self.update_ui_with_new_promotion()
        dialog.accept()

    def update_ui_with_new_promotion(self):
        for i in reversed(range(self.centralWidget().layout().count())):
            self.centralWidget().layout().itemAt(i).widget().setParent(None)

        container_widget = self.centralWidget().findChild(QWidget)
        container_layout = container_widget.layout()
        for promotion in self.promotions:
            promotion_widget = self.create_promotion_widget(promotion)
            container_layout.addWidget(promotion_widget)

def main():
    app = QApplication(sys.argv)
    ex = PromotionsApp()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
